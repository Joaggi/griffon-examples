/*
 * Copyright 2016-2017 Andres Almiray
 *
 * This file is part of Griffon Examples
 *
 * Griffon Examples is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Griffon Examples is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Griffon Examples. If not, see <http://www.gnu.org/licenses/>.
 */
/**
 * This class is generated by jOOQ
 */
package org.kordamp.griffon.addressbook.jooq.schema.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.kordamp.griffon.addressbook.jooq.schema.tables.Contacts;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ContactsRecord extends UpdatableRecordImpl<ContactsRecord> implements Record6<Integer, String, String, String, String, String> {

    private static final long serialVersionUID = -1775717136;

    /**
     * Setter for <code>PUBLIC.CONTACTS.ID</code>.
     */
    public ContactsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.CONTACTS.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CONTACTS.NAME</code>.
     */
    public ContactsRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.CONTACTS.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.CONTACTS.LASTNAME</code>.
     */
    public ContactsRecord setLastname(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.CONTACTS.LASTNAME</code>.
     */
    public String getLastname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.CONTACTS.COMPANY</code>.
     */
    public ContactsRecord setCompany(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.CONTACTS.COMPANY</code>.
     */
    public String getCompany() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.CONTACTS.ADDRESS</code>.
     */
    public ContactsRecord setAddress(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.CONTACTS.ADDRESS</code>.
     */
    public String getAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.CONTACTS.EMAIL</code>.
     */
    public ContactsRecord setEmail(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.CONTACTS.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Contacts.CONTACTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Contacts.CONTACTS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Contacts.CONTACTS.LASTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Contacts.CONTACTS.COMPANY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Contacts.CONTACTS.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Contacts.CONTACTS.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getLastname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCompany();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value3(String value) {
        setLastname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value4(String value) {
        setCompany(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value5(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value6(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContactsRecord
     */
    public ContactsRecord() {
        super(Contacts.CONTACTS);
    }

    /**
     * Create a detached, initialised ContactsRecord
     */
    public ContactsRecord(Integer id, String name, String lastname, String company, String address, String email) {
        super(Contacts.CONTACTS);

        set(0, id);
        set(1, name);
        set(2, lastname);
        set(3, company);
        set(4, address);
        set(5, email);
    }
}
