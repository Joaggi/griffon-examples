/*
 * Copyright 2016-2018 Andres Almiray
 *
 * This file is part of Griffon Examples
 *
 * Griffon Examples is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Griffon Examples is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Griffon Examples. If not, see <http://www.gnu.org/licenses/>.
 */

import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'izpack'
if (macosx) apply plugin: 'com.github.cr0.macappbundle'

dependencies {
    izpack 'org.codehaus.izpack:izpack-standalone-compiler:4.3.5'
}

task prepareIzpack(type: Copy, dependsOn: installDist) {
    destinationDir = file("$buildDir/install/izpack")
    from('src/main/izpack/resources') {
        into 'resources'
        filter(ReplaceTokens, tokens: ['griffon.version': griffon.version])
    }
    into('binary') {
        from installDist.destinationDir
    }
}

izPackCreateInstaller.dependsOn prepareIzpack
izPackCreateInstaller.doFirst {
    ant.chmod(dir: "$buildDir/install/izpack/binary/bin", excludes: '*.bat', perm: 'ugo+x')
}

izpack {
    baseDir = file("$buildDir/install/izpack")
    installFile = file('src/main/izpack/install.xml')
    outputFile = file("$buildDir/distributions/${project.name}-${version}-installer.jar")
    compression = 'deflate'
    compressionLevel = 9
    appProperties = [
        'app.group'       : 'Applications',
        'app.name'        : project.name,
        'app.title'       : project.name,
        'app.version'     : project.version,
        'app.subpath'     : "${project.name}-${project.version}",
        'app.binary'      : project.name,
        'app.java.version': targetCompatibility
    ]
}

if (macosx) {
    macAppBundle {
        mainClassName = project.mainClassName
        icon = 'src/media/griffon.icns'
        javaProperties.put('apple.laf.useScreenMenuBar', 'true')
    }
}


if (!project.hasProperty('keyAlias')) ext.keyAlias = ''
if (!project.hasProperty('keystorePwd')) ext.keystorePwd = ''

if (keyAlias || keystorePwd) {
    apply plugin: 'de.gliderpilot.jnlp'
    jnlp {
        useVersions = true
        withXml {
            information {
                title project.name
                vendor project.group ?: project.name
            }
            security {
                'all-permissions'()
            }
        }
        signJarParams = [alias: keyAlias, storepass: keystorePwd]
    }
}